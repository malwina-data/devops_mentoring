
    - name: Launch a new EC2 instance with db key pair
      community.aws.ec2_instance: 
        name: "db"
        key_name: "key"
        instance_type: t2.micro
        image_id: ami-04eeb630f180cea95
        wait: yes
        security_group: '{{ security_group_results.group_id }}'
        vpc_subnet_id: "{{ db_subnet_result.subnet.id }}" 
        network:
          assign_public_ip: true
      register: db_ec2
      when: db_ec2.instance_ids is not defined 

    - name: Wait for SSH to come up - db 
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        instance_ids: "{{ db_ec2.instance_ids[0] }}"
      register: instance_info_db
      until: instance_info_db.instances[0].state.name == 'running'
      retries: 20
      delay: 10
    
    - name: Add db-instance to host group
      add_host:
        name: db
        groups: db-servers
        ansible_host: "{{ instance_info_db.instances[0].public_ip_address }}"
        ansible_user: ec2-user
        ansible_ssh_private_key_file: "{{ key_file }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      when: instance_info_db.instances[0].public_ip_address is defined
      register: db_ec2_public_ip

    - name: Launch a new EC2 instance with web key pair
      community.aws.ec2_instance: 
        name: "web"
        key_name: "key"
        instance_type: t2.micro
        image_id: ami-04eeb630f180cea95  # Replace with your desired AMI ID
        wait: yes
        security_group: '{{ security_group_results.group_id }}'
        vpc_subnet_id: "{{ web_subnet_result.subnet.id }}" 
        network:
          assign_public_ip: true
      register: web_ec2
      when: web_ec2.instance_ids is not defined 

    - name: Wait for SSH to come up - web
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        instance_ids: "{{ web_ec2.instance_ids[0] }}"
      register: instance_info_web
      until: instance_info_web.instances[0].state.name == 'running'
      retries: 20
      delay: 10
    
    - name: Add web-instance to host group
      add_host:
        name: web
        groups: web_servers
        ansible_host: "{{ instance_info_web.instances[0].public_ip_address }}"
        ansible_user: ec2-user
        ansible_ssh_private_key_file: "{{ key_file }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      when: instance_info_web.instances[0].public_ip_address is defined
      register: web_ec2_public_ip

    - name: Create inventory.ini content
      set_fact:
        inventory_content: |
          [web_instance]
          {{ web_ec2_public_ip.add_host.host_name }} ansible_user=ec2-user ansible_ssh_private_key_file={{ key_file }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'
          [db_instances]
          {{ db_ec2_public_ip.add_host.host_name }} ansible_user=ec2-user ansible_ssh_private_key_file={{ key_file }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'

    - name: Save inventory to file
      copy:
        content: "{{ inventory_content }}"
        dest: "{{ inventory_file }}"
      delegate_to: localhost
- amazon.aws.autoscaling_group:
    name: special
    min_size: 1
    max_size: 1
    launch_config_name: "my-launch-template"
    launch_template: LaunchTemplateName=my-launch-template
    vpc_zone_identifier:   "{{ web_subnet_sa_east_1b.subnet.id }}"

