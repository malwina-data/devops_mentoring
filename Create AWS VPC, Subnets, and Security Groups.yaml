---
- name: Create AWS VPC, Subnets, and Security Groups
  hosts: localhost
  connection: local
  vars_files:
    - ../vars/aws_credentials.yaml
  vars: 
    ansible_python_interpreter: /usr/local/bin/python3 

  tasks:

    - name: Create VPC
      ec2_vpc_net:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        name: "{{ vpc_name }}"
        state: present
        cidr_block: "{{ vpc_cidr_block }}"
        resource_tags:
          Name: "{{ vpc_name }}"
      register: ec2_vpc_net_result

    - name: Create Internet Gateway for VPC
      ec2_vpc_igw:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          name: "{{ igw_name }}"
      register: igw_result

    - name: Create VPC Subnet - Db
      ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone }}"      
        state: present
        cidr: "{{ db_subnet_cidr_block }}"
        map_public: yes
        resource_tags:
          Name: "{{ db_subnet_name }}"
      register: db_subnet_result

    - name: Create VPC Public Subnet Route Table - Db
      ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ db_route_table_name }}"
        subnets: [ "{{ db_subnet_result.subnet.id }}" ]
        routes:
          - dest: "{{ destination_cidr_block }}"
            gateway_id: "{{ igw_result.gateway_id }}"
      register: db_public_route_table

    - name: Create VPC Subnet - Web
      ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone }}"
        state: present
        cidr: "{{ web_subnet_cidr_block }}"
        map_public: yes
        resource_tags:
          Name: "{{ web_subnet_name }}"
      register: web_subnet_result

    - name: Create VPC Public Subnet Route Table - Web
      ec2_vpc_route_table:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ web_route_table_name }}"
        subnets: [ "{{ web_subnet_result.subnet.id }}" ]
        routes:
          - dest: "{{ destination_cidr_block }}"
            gateway_id: "{{ igw_result.gateway_id }}"
      register: web_public_route_table

    - name: Create Security Group
      ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
        region: "{{ region }}"
        state: present
        name: "{{ security_group_name }}"
        description: "{{ security_group_name }}"
        tags:
          Name: "{{ security_group_name }}"
        rules:
          - proto: all
            cidr_ip: "{{ port22_cidr_block }}"
            rule_desc: allow all traffic
      register: security_group_results

    - name: Debug db_public_route_table
      debug:
        var: db_public_route_table

    - name: Debug web_public_route_table
      debug:
        var: web_public_route_table

    - name: Save variables to file
      copy:
        content: |
          ---
          region: "{{ region }}"
          az: "{{ zone }}"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
          igw_id: "{{ igw_result.gateway_id }}"
          db_subnet_id: "{{ db_subnet_result.subnet.id }}"
          web_subnet_id: "{{ web_subnet_result.subnet.id }}"
          db_route_table_id: "{{ db_public_route_table.route_table.id }}"
          web_route_table_id: "{{ web_public_route_table.route_table.id }}"
          security_group_id: "{{ security_group_results.group_id }}"
        dest: ../vars/aws_generated_vars.yaml
